@using OpenBudgeteer.Core.ViewModels.ItemViewModels
@using System.Drawing
@if (IsDialogVisible)
 {
     <div class="modal fade show" style=" display: block;">
         <div class="modal-dialog modal-dialog-scrollable" style="max-width: 600px">
             <div class="modal-content">
                 <div class="modal-header">
                     <h4 class="modal-title">@Title</h4>
                     <button type="button" class="btn-close" data-dismiss="modal" @onclick="OnCancelClickCallback"></button>
                 </div>
                 <div class="modal-body">
                     <div class="form-group">
                         <label>Name:</label>
                         <input class="form-control form-control-sm" type="text" @bind="DataContext.Bucket.Name"/>
                     </div>
                     <div class="row">
                         <div class="col form-group">
                             <label>Bucket Type:</label>
                             <select class="form-control form-control-sm" @onchange=@(e => DataContext.BucketVersion.BucketType = Convert.ToInt32(e.Value))>
                                 @foreach (var bucketType in DataContext.AvailableBucketTypes)
                                 {
                                     var position = DataContext.AvailableBucketTypes.IndexOf(bucketType) + 1;
                                     if (DataContext.BucketVersion.BucketType == position)
                                     {
                                         <option selected value="@position">@bucketType</option>
                                     }
                                     else
                                     {
                                         <option value="@position">@bucketType</option>
                                     }
                                 }
                             </select>
                         </div>
						  <div class="col form-group">
                             <label>Bucket Group:</label>
                             <select class="form-control form-control-sm" @onchange=@(e => DataContext.Bucket.BucketGroupId = Convert.ToInt32(e.Value))>
                                 @foreach (var bucketGroup in DataContext.AvailableBucketGroups)
                                 {
                                     if (bucketGroup.BucketGroupId == DataContext.Bucket.BucketGroupId)
                                     {
                                         <option selected value="@bucketGroup.BucketGroupId">@bucketGroup.Name</option>
                                     }
                                     else
                                     {
                                         <option value="@bucketGroup.BucketGroupId">@bucketGroup.Name</option>
                                     }
                                 }
                             </select>
                         </div>
                     </div>
                     <div class="row">
                         <div class="col form-group">
                             <label>Number of months:</label>
                             <input class="form-control form-control-sm" style="text-align: right;" type="number" @bind="DataContext.BucketVersion.BucketTypeXParam"/>
                         </div>
                         <div class="col form-group">
                             <label>Amount:</label>
                             <input class="form-control form-control-sm" style="text-align: right;" type="number" @bind="DataContext.BucketVersion.BucketTypeYParam"/>
                         </div>
                     </div>
                     <div class="row">
                         <div class="col form-group">
                             <label>(First) Target Date:</label>
                             <input class="form-control form-control-sm" style="text-align: right;" type="date" @bind="DataContext.BucketVersion.BucketTypeZParam" @bind:format="yyyy-MM-dd"/>
                         </div>
                         <div class="col form-group">
                             <label>Color:</label>
                             <select class="form-control form-control-sm" style="background-color: @ColorTranslator.ToHtml(DataContext.Bucket.Color)"
                                     @onchange=@(e => DataContext.Bucket.ColorCode = Convert.ToString(e.Value) ?? Color.LightGray.Name)>
                                 @foreach (var color in DataContext.AvailableColors)
                                 {
                                     if (color == DataContext.Bucket.Color)
                                     {
                                         <option selected style="background-color: @ColorTranslator.ToHtml(color)" value="@color.Name">@color.Name</option>
                                     }
                                     else
                                     {
                                         <option style="background-color: @ColorTranslator.ToHtml(color)" value="@color.Name">@color.Name</option>
                                     }
                                 }
                             </select>
                         </div>
                     </div>
                     <div class="form-group">
                         <label>Notes:</label>
                         <textarea rows="5" style="width: 100%" @bind="DataContext.BucketVersion.Notes"></textarea>
                     </div>
                 </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="OnSaveClickCallback">Save</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="OnCancelClickCallback">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
 }

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public BucketViewModelItem DataContext { get; set; }

    [Parameter]
    public bool IsDialogVisible { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnCancelClickCallback { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnSaveClickCallback { get; set; }
}
